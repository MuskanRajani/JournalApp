25-04-05 01:07:38.465 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.journalApp.JournalAppApplicationTests]: JournalAppApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
25-04-05 01:07:42.862 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.journalApp.JournalApplication for test class com.example.journalApp.JournalAppApplicationTests 
25-04-05 01:07:44.751 [main] INFO  c.e.j.JournalAppApplicationTests - Starting JournalAppApplicationTests using Java 17.0.12 with PID 12184 (started by amruc in C:\Users\amruc\Downloads\journalApp\journalApp) 
25-04-05 01:07:44.752 [main] DEBUG c.e.j.JournalAppApplicationTests - Running with Spring Boot v3.4.3, Spring v6.2.3 
25-04-05 01:07:44.754 [main] INFO  c.e.j.JournalAppApplicationTests - The following 1 profile is active: "dev" 
25-04-05 01:07:46.514 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
25-04-05 01:07:46.516 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode. 
25-04-05 01:07:46.836 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 309 ms. Found 2 MongoDB repository interfaces. 
25-04-05 01:07:46.870 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
25-04-05 01:07:46.872 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
25-04-05 01:07:46.902 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.journalApp.repository.JournalEntryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
25-04-05 01:07:46.903 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.journalApp.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
25-04-05 01:07:46.904 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces. 
25-04-05 01:07:47.681 [cluster-ClusterId{value='67f0350b9ae24223d412a71c', description='Cluster0'}-srv-cluster0.sf4nz.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-00.sf4nz.mongodb.net:27017 to client view of cluster 
25-04-05 01:07:47.714 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"application": {"name": "Cluster0"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/17.0.12+8-LTS-286"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='Muskan', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5a47730c, com.mongodb.Jep395RecordCodecProvider@15369d73, com.mongodb.KotlinCodecProvider@1cde374]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster0.sf4nz.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-eevlio-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='Cluster0', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null} 
25-04-05 01:07:47.738 [cluster-ClusterId{value='67f0350b9ae24223d412a71c', description='Cluster0'}-srv-cluster0.sf4nz.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-02.sf4nz.mongodb.net:27017 to client view of cluster 
25-04-05 01:07:47.745 [cluster-ClusterId{value='67f0350b9ae24223d412a71c', description='Cluster0'}-srv-cluster0.sf4nz.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server cluster0-shard-00-01.sf4nz.mongodb.net:27017 to client view of cluster 
25-04-05 01:07:48.293 [main] INFO  org.mongodb.driver.cluster - Waiting for server to become available for operation with ID 5. Remaining time: 29984 ms. Selector: WritableServerSelector, topology description: {type=REPLICA_SET, servers=[{address=cluster0-shard-00-02.sf4nz.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=cluster0-shard-00-01.sf4nz.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=cluster0-shard-00-00.sf4nz.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}]. 
25-04-05 01:07:48.470 [cluster-ClusterId{value='67f0350b9ae24223d412a71c', description='Cluster0'}-cluster0-shard-00-01.sf4nz.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-01.sf4nz.mongodb.net:27017, type=REPLICA_SET_PRIMARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=300011800, minRoundTripTimeNanos=0, setName='atlas-eevlio-shard-0', canonicalAddress=cluster0-shard-00-01.sf4nz.mongodb.net:27017, hosts=[cluster0-shard-00-01.sf4nz.mongodb.net:27017, cluster0-shard-00-00.sf4nz.mongodb.net:27017, cluster0-shard-00-02.sf4nz.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-01.sf4nz.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000026f, setVersion=186, topologyVersion=TopologyVersion{processId=67ed6b067bb32800c58be4fb, counter=6}, lastWriteDate=Sat Apr 05 01:07:47 IST 2025, lastUpdateTimeNanos=10748723682553100} 
25-04-05 01:07:48.470 [cluster-ClusterId{value='67f0350b9ae24223d412a71c', description='Cluster0'}-cluster0-shard-00-00.sf4nz.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-00.sf4nz.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=299490700, minRoundTripTimeNanos=0, setName='atlas-eevlio-shard-0', canonicalAddress=cluster0-shard-00-00.sf4nz.mongodb.net:27017, hosts=[cluster0-shard-00-01.sf4nz.mongodb.net:27017, cluster0-shard-00-00.sf4nz.mongodb.net:27017, cluster0-shard-00-02.sf4nz.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-01.sf4nz.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=186, topologyVersion=TopologyVersion{processId=67ed692eee3927cedd0ea67c, counter=4}, lastWriteDate=Sat Apr 05 01:07:47 IST 2025, lastUpdateTimeNanos=10748723681703500} 
25-04-05 01:07:48.474 [cluster-ClusterId{value='67f0350b9ae24223d412a71c', description='Cluster0'}-cluster0-shard-00-01.sf4nz.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary cluster0-shard-00-01.sf4nz.mongodb.net:27017 with max election id 7fffffff000000000000026f and max set version 186 
25-04-05 01:07:49.203 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR 
25-04-05 01:07:49.250 [cluster-ClusterId{value='67f0350b9ae24223d412a71c', description='Cluster0'}-cluster0-shard-00-02.sf4nz.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster0-shard-00-02.sf4nz.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=68368200, minRoundTripTimeNanos=0, setName='atlas-eevlio-shard-0', canonicalAddress=cluster0-shard-00-02.sf4nz.mongodb.net:27017, hosts=[cluster0-shard-00-01.sf4nz.mongodb.net:27017, cluster0-shard-00-00.sf4nz.mongodb.net:27017, cluster0-shard-00-02.sf4nz.mongodb.net:27017], passives=[], arbiters=[], primary='cluster0-shard-00-01.sf4nz.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=186, topologyVersion=TopologyVersion{processId=67ed6d8ed8328b8853087071, counter=3}, lastWriteDate=Sat Apr 05 01:07:48 IST 2025, lastUpdateTimeNanos=10748724465294600} 
25-04-05 01:07:49.852 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath. 
25-04-05 01:07:51.290 [main] INFO  c.e.j.JournalAppApplicationTests - Started JournalAppApplicationTests in 7.608 seconds (process running for 16.24) 
25-04-05 01:07:56.964 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.journalApp.services.UserServiceTest]: UserServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
25-04-05 01:07:57.029 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.journalApp.JournalApplication for test class com.example.journalApp.services.UserServiceTest 
